package com.xufree.learning.algorithm.nowcoder.sfjjk.chapter_06_binaryserch;

/**
 * Created by 张明旭 on 2017/6/21.
 * 对于一个有序循环数组arr，返回arr中的最小值。有序循环数组是指，有序数组左边任意长度的部分放到右边去，
 * 右边的部分拿到左边来。比如数组[1,2,3,3,4]，是有序循环数组，[4,1,2,3,3]也是。
 * <p>
 * 给定数组arr及它的大小n，请返回最小值。
 * <p>
 * 测试样例：
 * [4,1,2,3,3],5
 * 返回：1
 */
public class MinValue {
    public int getMin(int[] arr, int n) {
        // write code here
        if (n == 1) {
            return arr[0];
        }
        int left = 0;
        int right = n - 1;
        while (left < right) {
            if (arr[left] < arr[right]) {
                return arr[left];
            } else {
                int mid = left + (right - left) / 2;
                if (arr[left] > arr[mid]) {
                    right = mid ;
                } else if (arr[mid] > arr[right]) {
                    left = mid ;
                } else {
                    int min = arr[left];
                    for (int i = left + 1; i <= right; i++) {
                        if (arr[i] < min) {
                            min = arr[i];
                        }
                    }
                    return min;
                }
            }
        }
        return Math.min(arr[left],arr[right]);
    }

    public static void main(String[] args) {
        int[] arr = {236,239,239,240,240,241,242,243,244,246,252,255,257,275,275,276,279,282,283,287,290,293,300,302,303,305,309,314,314,315,320,327,330,333,333,338,340,343,344,348,352,354,363,365,369,372,376,376,376,378,380,381,383,386,391,398,398,404,405,416,417,425,427,432,432,440,443,444,445,446,446,446,446,447,447,449,454,455,455,455,455,458,459,465,467,476,485,485,487,488,496,498,502,503,504,509,512,515,517,520,520,529,532,537,541,544,552,553,555,555,559,561,566,568,577,579,582,587,588,593,601,607,608,609,613,614,618,621,621,1,2,6,13,23,26,30,32,32,33,35,37,37,39,45,49,50,55,55,64,64,66,71,73,81,81,82,86,92,95,112,113,115,116,119,124,125,125,126,127,132,132,133,134,150,153,156,158,159,163,163,169,177,177,177,180,181,184,185,187,187,188,191,192,194,195,196,205,209,210,210,212,217,217,221,224,224,225,225,226,229,233,234};
        int a = new MinValue().getMin(arr,arr.length);
        System.out.print(a);
    }
}
